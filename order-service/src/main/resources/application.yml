server:
  port: 8083

spring:
  application:
    name: order-service
  amqp:
    deserialization:
      trust-all: true
  config:
    import: optional:configserver:http://localhost:8888
  datasource:
    url: jdbc:postgresql://localhost:${POSTGRES_PORT:5432}/bytebites
    username: ${POSTGRES_USER:postgres}
    password: ${POSTGRES_PASSWORD:728728}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
  cloud:
    config:
      uri: http://localhost:8888
  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USER:guest}
    password: ${RABBITMQ_PASSWORD:guest}
    listener:
      simple:
        default-requeue-rejected: false
    template:
      default-receive-queue: order-queue
    publisher-confirm-type: correlated
    publisher-returns: true
    ssl:
      enabled: false

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,circuitbreakerevents
  endpoint:
    health:
      show-details: always

springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html

jwt:
  secret: your-256-bit-secret-key-must-be-at-least-32-characters-long
  expiration: 86400000  # 24 hours in milliseconds

logging:
  level:
    org.springframework.security: DEBUG
    com.bytebites.order: DEBUG
    org.springframework.web: DEBUG

resilience4j:
  circuitbreaker:
    instances:
      orderService:
        failure-rate-threshold: 50
        wait-duration-in-open-state: 10s
        sliding-window-type: COUNT_BASED
        sliding-window-size: 10
        minimum-number-of-calls: 5
        permitted-number-of-calls-in-half-open-state: 3
  retry:
    instances:
      orderService:
        max-attempts: 3
        wait-duration: 1s 